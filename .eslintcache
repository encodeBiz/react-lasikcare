[{"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/index.js":"1","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/router/RouterHelper.js":"2","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Navbar/Navbar.js":"3","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/Appointments.js":"4","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/video_call/CalendarOnlinePage/CalendarOnlinePage.js":"5","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/ThankAppointmentPage/ThankAppointmentPage.js":"6","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/CityAppointmentPage/CityAppointmentPage.js":"7","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/appointment_config/appointmentConfig.actions.js":"8","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/CardContainer/CardContainer.js":"9","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/redux.helper.js":"10","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Calendar/Calendar.js":"11","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/router/router.actions.js":"12","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/services/fetch.helper.js":"13","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/router/RootComponent.js":"14","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/App.js":"15","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/services/appointments.service.js":"16","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/video_call/VideoCall.js":"17","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/ConfirmAppointmentPage/ConfirmAppointmentPage.js":"18","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/video_call/ConfirmOnlinePage/ConfirmOnlinePage.js":"19","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/clinics/clinics.reducer.js":"20","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/errors/errors.reducer.js":"21","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Stepper/Stepper.js":"22","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Select/Select.component.js":"23","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/available_hours/available_hours.actions.js":"24","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/enpoints/enpoints.constants.js":"25","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/CalendarAppointmentPage/CalendarAppointmentPage.js":"26","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/available_hours/available_hours.reducer.js":"27","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/clinics/clinics.actions.js":"28","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/index.js":"29","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/router/router.reducer.js":"30","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Card/Card.js":"31","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Calendar/CalendarHour/CalendarHour.js":"32","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/hooks/useWindowSize.js":"33","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/errors/errors.actions.js":"34","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/appointment_config/appointmentConfig.reducer.js":"35","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Button/Button.js":"36"},{"size":359,"mtime":1612864141114,"results":"37","hashOfConfig":"38"},{"size":257,"mtime":1612428198687,"results":"39","hashOfConfig":"38"},{"size":393,"mtime":1612361028387,"results":"40","hashOfConfig":"38"},{"size":2932,"mtime":1612881981358,"results":"41","hashOfConfig":"38"},{"size":844,"mtime":1612880175535,"results":"42","hashOfConfig":"38"},{"size":449,"mtime":1612864141114,"results":"43","hashOfConfig":"38"},{"size":2896,"mtime":1612880804547,"results":"44","hashOfConfig":"38"},{"size":309,"mtime":1612437509167,"results":"45","hashOfConfig":"38"},{"size":324,"mtime":1612366727281,"results":"46","hashOfConfig":"38"},{"size":151,"mtime":1612864141114,"results":"47","hashOfConfig":"38"},{"size":1659,"mtime":1612864141162,"results":"48","hashOfConfig":"38"},{"size":422,"mtime":1612864141114,"results":"49","hashOfConfig":"38"},{"size":1283,"mtime":1612437899367,"results":"50","hashOfConfig":"38"},{"size":2768,"mtime":1612884589917,"results":"51","hashOfConfig":"38"},{"size":3715,"mtime":1612890135120,"results":"52","hashOfConfig":"38"},{"size":1003,"mtime":1612865006760,"results":"53","hashOfConfig":"38"},{"size":622,"mtime":1612356836765,"results":"54","hashOfConfig":"38"},{"size":1866,"mtime":1612864141114,"results":"55","hashOfConfig":"38"},{"size":614,"mtime":1612864141114,"results":"56","hashOfConfig":"38"},{"size":670,"mtime":1612886647828,"results":"57","hashOfConfig":"38"},{"size":731,"mtime":1612430324956,"results":"58","hashOfConfig":"38"},{"size":888,"mtime":1612453141819,"results":"59","hashOfConfig":"38"},{"size":1070,"mtime":1612864141162,"results":"60","hashOfConfig":"38"},{"size":1243,"mtime":1612889135486,"results":"61","hashOfConfig":"38"},{"size":157,"mtime":1612874471499,"results":"62","hashOfConfig":"38"},{"size":4906,"mtime":1612881794175,"results":"63","hashOfConfig":"38"},{"size":1292,"mtime":1612888243750,"results":"64","hashOfConfig":"38"},{"size":870,"mtime":1612888905708,"results":"65","hashOfConfig":"38"},{"size":555,"mtime":1612864141114,"results":"66","hashOfConfig":"38"},{"size":509,"mtime":1612368849560,"results":"67","hashOfConfig":"38"},{"size":308,"mtime":1612432807318,"results":"68","hashOfConfig":"38"},{"size":611,"mtime":1612864141162,"results":"69","hashOfConfig":"38"},{"size":1033,"mtime":1612455086152,"results":"70","hashOfConfig":"38"},{"size":313,"mtime":1612429258326,"results":"71","hashOfConfig":"38"},{"size":827,"mtime":1612452614967,"results":"72","hashOfConfig":"38"},{"size":571,"mtime":1612864141162,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3ukkp7",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"81"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/index.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/router/RouterHelper.js",[],["157","158"],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Navbar/Navbar.js",[],["159","160"],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/Appointments.js",["161","162","163","164"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { getHoursById } from \"../../redux/available_hours/available_hours.actions\";\nimport { getClinicsAppointments } from \"../../redux/clinics/clinics.actions\";\nimport { RouteWithSubRoutes } from \"../../router/RouterHelper\";\nimport \"./appointments.style.css\";\n\n/**\n * Root de las citas y punto de entrada\n * @param {Object} properties Properties para la página\n * @param {Promise} properties.available_hours Huecos de las clinicas\n * @param {Promise} properties.clinics Huecos de las clinicas\n * @param {Function} properties.getClinicsAppointments Acción para obtener las clínicas\n * @param {Function} properties.getHoursById  Acción para obtener los huecos dado una clinica y un tipo de cita\n * @param {[String]} properties.routes Subrutas de citas\n */\n\nfunction Appointments(properties) {\n\tconst [init, setInit] = useState(false);\n\tconst [clinics, setClinics] = useState([]);\n\t\n\tuseEffect(() => {\n\t\t\n\t\tproperties.getClinicsAppointments();\n\n\t\t\n\n\t}, []);\n\n\n\tuseEffect(() => {\n\n\t}, [])\n\n\tconst getHours =  () => {\n\t\tproperties.clinics.then((clinicsState) => {\n\t\t\tif (clinicsState.clinics.status === \"finish\" && !init) {\n\t\t\t\tsetInit(true);\n\t\t\t\tconst cli = clinicsState.clinics.clinics;\n\t\t\t\tfor (let index = 0; index < cli.length; index++) {\n\t\t\t\t\tconst { keycli } = cli[index];\n\t\t\t\t\tproperties.getHoursById(keycli, \"BI\");\n\t\t\t\t\tproperties.getHoursById(keycli, \"BIDI\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t// properties.clinics.then((clinicsState) => {\n\t// \tif (clinicsState.clinics.status === \"finish\" && !init) {\n\t// \t\tsetInit(true);\n\t// \t\tconst cli = clinicsState.clinics.clinics;\n\t// \t\tfor (let index = 0; index < cli.length; index++) {\n\t// \t\t\tconst { keycli } = cli[index];\n\t// \t\t\tproperties.getHoursById(keycli, \"BI\");\n\t// \t\t\tproperties.getHoursById(keycli, \"BIDI\");\n\t// \t\t}\n\t// \t}\n\t// });\n\n\t// properties.clinics.then((clinicsState) => {\n\t// \tif (clinicsState.clinics.status === \"finish\") {\n\t// \t\tsetClinics(clinicsState.clinics.clinics);\n\t// \t}\n\t// });\n\n\tconst getClinics = () => {\n\t\tproperties.clinics.then((clinicsState) => {\n\t\t\tif (clinicsState.clinics.status === \"finish\") {\n\t\t\t\tsetClinics(clinicsState.clinics.clinics);\n\t\t\t}\n\t\t});\n\t};\n\n\treturn (\n\t\t<Switch>\n\t\t\t{properties.routes.map((route, i) => (\n\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\n\t\t\t))}\n\t\t\t<Route to=\"/appointments\">\n\t\t\t\t<Redirect to=\"/appointments/type\"></Redirect>\n\t\t\t</Route>\n\t\t</Switch>\n\t);\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tgetClinicsAppointments: () => dispatch(getClinicsAppointments()),\n\t\tgetHoursById: (keycli, appointments_type) => dispatch(getHoursById(keycli, appointments_type)),\n\t};\n};\nconst mapStateToProps = (state, routes) => ({\n\tclinics: state.clinics,\n\tavailable_hours: state.available_hours,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);\n","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/video_call/CalendarOnlinePage/CalendarOnlinePage.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/ThankAppointmentPage/ThankAppointmentPage.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/CityAppointmentPage/CityAppointmentPage.js",["165","166","167"],"import React, { useEffect, useState } from \"react\";\nimport CardContainer from \"../../../shared_modules/CardContainer/CardContainer\";\nimport Stepper from \"../../../shared_modules/Stepper/Stepper\";\n\nimport \"./CityAppointmentPage.scss\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Button from \"../../../shared_modules/Button/Button\";\nimport { componentDidUpdate } from \"../../../redux/redux.helper\";\n\nimport { setAppoinmentConfig } from \"../../../redux/appointment_config/appointmentConfig.actions\";\nimport SelectComponent from \"../../../shared_modules/Select/Select.component\";\n/**\n * Seleccionde la ciudad, modifica el estado de configuracion de cita en el store\n * @param {Object} properties \n * @param {Promise} properties.clinics Clínicas disponibles\n */\nconst CityAppointmentPage = (properties) => {\n\tconst history = useHistory()\n\tconst [clinicsState, setClinics] = useState({status: 'pending', clinics: []})\n\tconst [selectedClinic, selectClinic] = useState(null)\n\tconst goBack = useHistory().goBack;\n\n\tuseEffect(() => {\n\t\tproperties.clinics\n\t\t.then(_c => {\n\t\t\tsetClinics(_c.clinics)\n\t\t})\n\t}, [clinicsState])\n\n\t\n\n\t/**\n\t * Setea el currentStep del store.\n\t */\n\tuseEffect(() => {\n\t\tproperties.setAppoinmentConfig(\"currentStep\", 1);\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst navigateTo = (url) => history.push(url)//\n\n\n\tconst paintCities = ()=>{\n\t\tif(clinicsState.clinics)\n\t\t return clinicsState.clinics.map((clinic, index)=>{\n\t\t\t\treturn  {value: clinic ,label: clinic.name }\n\t\t\t})\n\t\telse return <h1>LOADING</h1>\n\t}\n\n\tconst handleEventSelect = ($event)=> selectClinic($event.value);\n\tconst handleEventAccept = () => {\n\t\tif(selectedClinic != null) properties.setAppoinmentConfig('city', selectedClinic)\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Stepper currentStepIndex = {properties.appointment.currentStep} navigateTo={navigateTo}/>\n\t\t\t<div className=\"top-content\">\n\t\t\t\t<Button action={history.goBack} styleType={\"back-button\"} label={\"Züruch\"} />\n\t\t\t</div>\n\t\t\t<CardContainer>\n\t\t\t <SelectComponent options={paintCities()} handleEvent={handleEventSelect}></SelectComponent>\n\t\t\t</CardContainer>\n\t\t\t<div className=\"container-row\">\n\t\t\t\t<Button action={handleEventAccept} styleType={\"rounded-button\"} label={\"fortsetzen\"} />\n\t\t\t</div>\n\t\t\t\n\t\t</React.Fragment>\n\t);\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n\t/**\n\t *\n\t * @param {String} property  Propiedad del estado que se debe actualizar\n\t * @param {String || Object || number} data Datos con los que se actualizará la propiedad anterior\n\t * @description Actualiza un campo del objeto de appointment\n\t */\n\tsetAppoinmentConfig: (property, data) => dispatch(setAppoinmentConfig(property, data)),\n});\n\nconst mapStateToProps = (store) => {\n\treturn {\n\t\tappointment: store.appointment,\n\t\tclinics: store.clinics\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CityAppointmentPage);\n","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/appointment_config/appointmentConfig.actions.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/CardContainer/CardContainer.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/redux.helper.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Calendar/Calendar.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/router/router.actions.js",[],["168","169"],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/services/fetch.helper.js",["170"],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/router/RootComponent.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/App.js",["171","172","173","174"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./styles/App.css\";\nimport image from \"./assets/images/icons/doctor-color-icon.svg\";\nimport { setClinicAppointments } from \"./redux/clinics/clinics.actions\";\nimport { fetchAvailableHours } from \"./redux/available_hours/available_hours.actions\";\nimport CardContainer from \"./shared_modules/CardContainer/CardContainer\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"./shared_modules/Card/Card\";\n\n/**\n * Página de ejemplo\n * @param {Object} properties Properties para la página\n * @param {Object} properties.store Store de redux\n * @param {Function} properties.getClinicsAppointments Acción para obtener las clínicas\n * @param {Function} properties.getHoursById  Acción para obtener los huecos dado una clinica y un tipo de cita\n */\nfunction App(properties) {\n\tconst [init, setInit] = useState(false);\n\tconst [clinics, setClinics] = useState([]);\n\tconst [clientCity, setClientCity] = useState(null);\n\n\tconst homeLinksConfig = [\n\t\t{\n\t\t\ttitle: \"Zu Hause\",\n\t\t\timage,\n\t\t\tsubtitle: \"Online video-beratung von zu hause aus\",\n\t\t\turl: \"/videollamadas\",\n\t\t},\n\t\t{\n\t\t\ttitle: \"Vor Ort\",\n\t\t\timage,\n\t\t\tsubtitle: \"Vor-ort beratung im nächstgelegenen Lasik Care standort\",\n\t\t\turl: \"/appointments\",\n\t\t},\n\t];\n\n\tuseEffect(() => {\n\t\tconst city = localStorage.getItem(\"city\");\n\t\tsetClinics(properties.clinics);\n\t\tif (city) {\n\t\t\tsetClientCity(city);\n\t\t}\n\n\t\tgetAsyncData();\n\t}, [clinics]);\n\n\tconst getAsyncData = async () => {\n\t\ttry {\n\t\t\tawait properties.setClinicAppointments();\n\n\t\t\tawait getAllClinicsHours();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\t/**\n\t *\n\t */\n\n\tconst getAllClinicsHours = () => {\n\t\tclinics.clinics.forEach((clinic) => {\n\t\t\tconsole.log(\"Hola\");\n\t\t\tproperties.fetchAvailableHours(clinic.keycli, \"BI\");\n\t\t\tproperties.fetchAvailableHours(clinic.keycli, \"BIDI\");\n\t\t});\n\t};\n\n\t// properties.store.clinics.then( clinicsState => {\n\t//   if(clinicsState.clinics.status === 'finish' && !init ){\n\t//     setInit(true)\n\t//     const cli = clinicsState.clinics.clinics\n\t//     for (let index = 0; index < cli.length; index++) {\n\t//       const {keycli} = cli[index];\n\t//       properties.getHoursById(keycli,'BI')\n\t//       properties.getHoursById(keycli,'BIDI')\n\t//     }\n\t//   }\n\t// })\n\n\t// /* properties.store.available_hours.then(\n\t//   (_store) => {\n\t//     console.log('available_hours', _store)\n\t// }) */\n\t// properties.store.clinics.then( clinicsState => {\n\t//   if (clinicsState.clinics.status === 'finish'){\n\t//     setClinics(clinicsState.clinics.clinics)\n\t//   }\n\t// })\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<h1 className=\"home-title\">\n\t\t\t\tBitte wählen Sie Ihren <br /> Wunschtermin\n\t\t\t</h1>\n\t\t\t<CardContainer isColumn={false}>\n\t\t\t\t{homeLinksConfig.map((link, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Link to={link.url} key={index}>\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<div className=\"home-card\">\n\t\t\t\t\t\t\t\t\t<h3>{link.title}</h3>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<img className=\"home-card-image\" src={link.image} alt=\"...\" />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<p>{link.subtitle}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</CardContainer>\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsetClinicAppointments: () => dispatch(setClinicAppointments()),\n\t\tfetchAvailableHours: (keycli, appointments_type) =>\n\t\t\tdispatch(fetchAvailableHours(keycli, appointments_type)),\n\t};\n};\n\nconst mapStateToProps = (state) => ({\n\tclinics: state.clinics,\n\tavailable_hours: state.available_hours,\n});\n\n// const mapStateToProps = (state) => ({\n// \tstore: { clinics: state.clinics, available_hours: state.available_hours },\n// });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/services/appointments.service.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/video_call/VideoCall.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/ConfirmAppointmentPage/ConfirmAppointmentPage.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/video_call/ConfirmOnlinePage/ConfirmOnlinePage.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/clinics/clinics.reducer.js",["175"],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/errors/errors.reducer.js",["176"],"import { SET_ERROR, GET_ERROR, DELETE_ERROR } from \"./errors.actions\";\n\nconst errorInitialState = {};\n\n/**\n * @param {Object} state Estado actual\n * @param {Object} action Acción \n * @param {STRING} action.type \n * @param {Object} action.error Acción \n */\n\nconst errorReducer = async (state= {error : \"Ha ocurrido un error\"}, action) => {\n    switch (action.type) {\n        case SET_ERROR:\n            return {...state, error: action.error}\n        case GET_ERROR: \n            return state\n        case DELETE_ERROR: \n            const filteredErrors =  state.filter((error) => error !== action.error)\n            return {state: filteredErrors}    \n        default:\n            return state;\n    }\n}\n\nexport default errorReducer",["177","178"],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Stepper/Stepper.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Select/Select.component.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/available_hours/available_hours.actions.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/enpoints/enpoints.constants.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/page_modules/appointments/CalendarAppointmentPage/CalendarAppointmentPage.js",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { useEffect, useState } from \"react\";\nimport Stepper from \"../../../shared_modules/Stepper/Stepper\";\nimport Calendar from \"../../../shared_modules/Calendar/Calendar\";\n\n\nimport \"./CalendarAppointmentPage.scss\";\nimport Button from \"../../../shared_modules/Button/Button\";\nimport { useHistory } from \"react-router\";\nimport { setAppoinmentConfig } from \"../../../redux/appointment_config/appointmentConfig.actions\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment\";\nimport useWindowSize from \"../../../hooks/useWindowSize\";\n\n\n/**\n * \n * @param {Object} properties\n * @param {Object} properties.appointment Configuración de la cita hasta el momento desde redux\n * @param {Object} properties.available_hours Horas disponibles por tipo y ciudad desde redux\n *  \n * Pagina de calendario y selección de hora\n */\n\nconst CalendarAppointmentPage = (properties) => {\n\tconst history = useHistory();\n\tconst navigateTo = (url) => history.push(url);\n\tconst today = moment();\n\n\t/////////////////////////////\n\t// Configuración del componente\n\t/////////////////////////////\n\n\tconst [dataTimes, setDataTimes] = useState([]);\n\tconst [dataDates, setDataDates] = useState(null);\n\tconst [chosenAppointment, setChosenAppointment] = useState({});\n\tconst [selectedDateString, setSelectedDateString] = useState(null);\n\tconst [calendarWidth, setCalendarWidth] = useState(null);\n\tconst [focused, setFocused] = useState(false);\n\tconst [initialDate, setInitialDate] = useState(today);\n\tconst [datesToString, setDatesToString] = useState(\"\");\n\tconst {width} = useWindowSize()\n\tconst [selectedType, setType] = useState(null)\n\tconst [selectedCity, setCity] = useState(null)\n\tconst [dataCalendar, setDataCalendar] = useState([])\n\n\n\tconsole.log(properties.appointment)\n\t\n\n\t/**\n\t* @description Setea el currentStep del store\n\t*/\n\tuseEffect(() => {\n\t\tproperties.available_hours\n\t\t\t.then((available_hours)=>{\n\t\t\t\tproperties.setAppoinmentConfig(\"currentStep\", 2);\n\t\t\t\tsetType(properties.appointment.type)\n\t\t\t\tsetCity(properties.appointment.city.keycli)\n\n\t\t\t\treturn available_hours\n\t\t\t})\n\t\t\t.then((available_hours) => {\n\t\t\t\t/**\n\t\t\t\t * @type {Array.<String>}\n\t\t\t\t */\n\n\t\t\t\t \n\t\t\t\tconst data = selectedCity && selectedType ? available_hours[selectedCity].data[selectedType].hueco : []\n\t\t\t\t\n\t\t\t\tsetDataCalendar(\n\t\t\t\t\tdata.map(item =>{\n\t\t\t\t\t\tconst date =  item.fecha.split('/')\n\t\t\t\t\t\tconst formatedDate = new Date( parseInt(date[2]) , parseInt(date[1]) - 1, parseInt(date[0]) )\n\t\t\t\t  \treturn {...item, formatedDate : moment(formatedDate)}\t\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t})\n\t}, [selectedType,selectedCity]);\n\n\n\t/**\n\t* @description Setea la anchura del calendario \n\t* para adaptarlo a diferentes tamaños de pantalla. \n\t*/\n\tuseEffect(() => {\n\t\tsetCalendarWidth(formatCalendarWidth(width))\n\t}, [width])\n\n\tconst formatCalendarWidth = (width) => {\n\t\t//a partir de 1080 no debe ejecutarse la función\n\t\tif (width <= 320) return 35;\n\t\telse if (width <= 414 || width <= 1080) return 40;\n\t\telse if (width <= 980) return 50;\n\t\telse return 50;\n\t  };\n\t\t\n\t/////////////////////////////\n\t// Gestión de eventos\n\t/////////////////////////////\n\n\tconst formatDateToString = (date) => {\n\t\treturn moment(date).format(\"DD/MM/yyyy\").split(\"/\").join(\"\");\n\t  };\n\n\n\n\t/////////////////////////////\n\t// Renderizado del componente\n\t/////////////////////////////\n\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Stepper\n\t\t\t\tcurrentStepIndex={properties.appointment?.currentStep}\n\t\t\t\tnavigateTo={navigateTo}\n\t\t\t></Stepper>\n\t\t\t<div className=\"top-content\">\n\t\t\t\t<Button \n\t\t\t\t\taction={history.goBack} \n\t\t\t\t\ttype={\"back-button\"} \n\t\t\t\t\tlabel={\"Zurück\"} />\n\t\t\t</div>\n\t\t\n\t\t\t<Calendar \n\t\t\t\tdatesList={dataCalendar} \n\t\t\t\tsetFocused={setFocused} \n\t\t\t\tinitialDate={initialDate} \n\t\t\t\twidth={width} \n\t\t\t>\n\t\t\t</Calendar>\n\t\t\t<Button \n\t\t\t\ttype={\"rounded-button\"} \n\t\t\t\tlabel={\"Rounded button\"} ç\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n};\n\n/**\n *\n * @param {Function} dispatch\n * @description Transforma las acciones de redux en props\n *\n */\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t/**\n\t\t *\n\t\t * @param {String} property  Propiedad del estado que se debe actualizar\n\t\t * @param {String || Object || number} data Datos con los que se actualizará la propiedad anterior\n\t\t * @description Actualiza un campo del objeto de appointment\n\t\t */\n\t\tsetAppoinmentConfig: (property, data) => dispatch(setAppoinmentConfig(property, data)),\n\t};\n};\n\n/**\n *\n * @param {Object} store\n * @param {Object} store.appointment Configuración de la cita hasta el momento desde redux\n * @param {Object} store.available_hours Horas disponibles por tipo y ciudad desde redux\n * @description Transforma el appointments reducer a props\n * que serán consumidas por el componente y sus hijos.\n */\n\nconst mapStateToProps = (store) => {\n\treturn {\n\t\tappointment: store.appointment,\n\t\tavailable_hours : store.available_hours \n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarAppointmentPage);\n","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/available_hours/available_hours.reducer.js",["194","195"],"import { getHuecos } from \"../../services/appointments.service\";\nimport { GET_HOURS_BY_ID, GET_HOURS } from \"./available_hours.actions\";\n\nconst initialState = {}\n\n/**\n * \n * @param {Object} state \n * @param {Object} action \n * @param {String} action.type\n * @param {Object} action.clinic_data  \n * @param {String} action.clinic_data.keycli \n * @param {String} action.clinic_data.appointments_type \n */\nconst fn = async (state = initialState, action)=>{\n  switch (action.type) {\n    // case GET_HOURS_BY_ID:\n    //   const params = {\n    //     keycli: action.clinic_data.keycli,\n    //     date: new Date(new Date().setMonth(2)).toLocaleDateString(),\n    //     type: action.clinic_data.appointments_type\n    //   };\n\n    //   const res = await Promise.all([state, getHuecos(params)])  \n   \n      \n    //   const data = res[0][action.clinic_data.keycli]?.data ? res[0][action.clinic_data.keycli]?.data : {}\n      \n    //   return {...res[0], [action.clinic_data.keycli]: { \n    //       status: 'finish', \n    //       data:{\n    //         ...data,\n    //         [action.clinic_data.appointments_type]: res[1].huecos\n    //       }  \n    //     }\n    //   }\n      \n    case GET_HOURS_BY_ID : \n    console.log(action)\n    return {}\n\n    default:\n      return state;\n  }\n}\n\nexport default fn;","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/clinics/clinics.actions.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/index.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/router/router.reducer.js",["196"],"import { NAVIGATE } from \"./router.actions\";\nconst initialState = {\n\tpre_url: null,\n\turl: \"/\",\n};\n\n/**\n * Reducer para la navegación de la aplicación\n * @param {Object} action Acción del reducer\n * @param {String} action.type Constante de la acción a realizar\n * @param {String} action.payload Estado de la navegación\n */\n\nexport default (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase NAVIGATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.payload,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Card/Card.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Calendar/CalendarHour/CalendarHour.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/hooks/useWindowSize.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/errors/errors.actions.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/redux/appointment_config/appointmentConfig.reducer.js",[],"/home/rload/Documentos/TRABAJO_RLOAD/LasikCare/react-lasikcare/src/shared_modules/Button/Button.js",[],{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"197","replacedBy":"201"},{"ruleId":"199","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":21,"column":9,"nodeType":"205","messageId":"206","endLine":21,"endColumn":16},{"ruleId":"207","severity":1,"message":"208","line":29,"column":5,"nodeType":"209","endLine":29,"endColumn":7,"suggestions":"210"},{"ruleId":"203","severity":1,"message":"211","line":36,"column":8,"nodeType":"205","messageId":"206","endLine":36,"endColumn":16},{"ruleId":"203","severity":1,"message":"212","line":68,"column":8,"nodeType":"205","messageId":"206","endLine":68,"endColumn":18},{"ruleId":"203","severity":1,"message":"213","line":9,"column":10,"nodeType":"205","messageId":"206","endLine":9,"endColumn":28},{"ruleId":"203","severity":1,"message":"214","line":22,"column":8,"nodeType":"205","messageId":"206","endLine":22,"endColumn":14},{"ruleId":"207","severity":1,"message":"215","line":29,"column":5,"nodeType":"209","endLine":29,"endColumn":19,"suggestions":"216"},{"ruleId":"197","replacedBy":"217"},{"ruleId":"199","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":28,"column":20,"nodeType":"221","messageId":"222","endLine":28,"endColumn":22},{"ruleId":"203","severity":1,"message":"223","line":19,"column":9,"nodeType":"205","messageId":"206","endLine":19,"endColumn":13},{"ruleId":"203","severity":1,"message":"224","line":19,"column":15,"nodeType":"205","messageId":"206","endLine":19,"endColumn":22},{"ruleId":"203","severity":1,"message":"225","line":21,"column":9,"nodeType":"205","messageId":"206","endLine":21,"endColumn":19},{"ruleId":"207","severity":1,"message":"226","line":46,"column":5,"nodeType":"209","endLine":46,"endColumn":14,"suggestions":"227"},{"ruleId":"203","severity":1,"message":"228","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":21},{"ruleId":"203","severity":1,"message":"229","line":3,"column":7,"nodeType":"205","messageId":"206","endLine":3,"endColumn":24},{"ruleId":"197","replacedBy":"230"},{"ruleId":"199","replacedBy":"231"},{"ruleId":"203","severity":1,"message":"232","line":33,"column":9,"nodeType":"205","messageId":"206","endLine":33,"endColumn":18},{"ruleId":"203","severity":1,"message":"233","line":33,"column":20,"nodeType":"205","messageId":"206","endLine":33,"endColumn":32},{"ruleId":"203","severity":1,"message":"234","line":34,"column":9,"nodeType":"205","messageId":"206","endLine":34,"endColumn":18},{"ruleId":"203","severity":1,"message":"235","line":34,"column":20,"nodeType":"205","messageId":"206","endLine":34,"endColumn":32},{"ruleId":"203","severity":1,"message":"236","line":35,"column":9,"nodeType":"205","messageId":"206","endLine":35,"endColumn":26},{"ruleId":"203","severity":1,"message":"237","line":35,"column":28,"nodeType":"205","messageId":"206","endLine":35,"endColumn":48},{"ruleId":"203","severity":1,"message":"238","line":36,"column":9,"nodeType":"205","messageId":"206","endLine":36,"endColumn":27},{"ruleId":"203","severity":1,"message":"239","line":36,"column":29,"nodeType":"205","messageId":"206","endLine":36,"endColumn":50},{"ruleId":"203","severity":1,"message":"240","line":37,"column":9,"nodeType":"205","messageId":"206","endLine":37,"endColumn":22},{"ruleId":"203","severity":1,"message":"241","line":38,"column":9,"nodeType":"205","messageId":"206","endLine":38,"endColumn":16},{"ruleId":"203","severity":1,"message":"242","line":39,"column":22,"nodeType":"205","messageId":"206","endLine":39,"endColumn":36},{"ruleId":"203","severity":1,"message":"243","line":40,"column":9,"nodeType":"205","messageId":"206","endLine":40,"endColumn":22},{"ruleId":"203","severity":1,"message":"244","line":40,"column":24,"nodeType":"205","messageId":"206","endLine":40,"endColumn":40},{"ruleId":"207","severity":1,"message":"208","line":78,"column":5,"nodeType":"209","endLine":78,"endColumn":32,"suggestions":"245"},{"ruleId":"203","severity":1,"message":"246","line":101,"column":8,"nodeType":"205","messageId":"206","endLine":101,"endColumn":26},{"ruleId":"203","severity":1,"message":"247","line":1,"column":10,"nodeType":"205","messageId":"206","endLine":1,"endColumn":19},{"ruleId":"203","severity":1,"message":"248","line":2,"column":27,"nodeType":"205","messageId":"206","endLine":2,"endColumn":36},{"ruleId":"249","severity":1,"message":"250","line":14,"column":1,"nodeType":"251","endLine":24,"endColumn":3},"no-native-reassign",["252"],"no-negated-in-lhs",["253"],["252"],["253"],"no-unused-vars","'clinics' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'properties'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'getHours' is assigned a value but never used.","'getClinics' is assigned a value but never used.","'componentDidUpdate' is defined but never used.","'goBack' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'properties.clinics'. Either include it or remove the dependency array.",["255"],["252"],["253"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'init' is assigned a value but never used.","'setInit' is assigned a value but never used.","'clientCity' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAsyncData' and 'properties.clinics'. Either include them or remove the dependency array. If 'setClinics' needs the current value of 'properties.clinics', you can also switch to useReducer instead of useState and read 'properties.clinics' in the reducer.",["256"],"'getClinicas' is defined but never used.","'errorInitialState' is assigned a value but never used.",["252"],["253"],"'dataTimes' is assigned a value but never used.","'setDataTimes' is assigned a value but never used.","'dataDates' is assigned a value but never used.","'setDataDates' is assigned a value but never used.","'chosenAppointment' is assigned a value but never used.","'setChosenAppointment' is assigned a value but never used.","'selectedDateString' is assigned a value but never used.","'setSelectedDateString' is assigned a value but never used.","'calendarWidth' is assigned a value but never used.","'focused' is assigned a value but never used.","'setInitialDate' is assigned a value but never used.","'datesToString' is assigned a value but never used.","'setDatesToString' is assigned a value but never used.",["257"],"'formatDateToString' is assigned a value but never used.","'getHuecos' is defined but never used.","'GET_HOURS' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [properties]",{"range":"266","text":"267"},"Update the dependencies array to be: [clinicsState, properties.clinics]",{"range":"268","text":"269"},"Update the dependencies array to be: [clinics, getAsyncData, properties.clinics]",{"range":"270","text":"271"},"Update the dependencies array to be: [selectedType, selectedCity, properties]",{"range":"272","text":"273"},[1102,1104],"[properties]",[1141,1155],"[clinicsState, properties.clinics]",[1464,1473],"[clinics, getAsyncData, properties.clinics]",[2546,2573],"[selectedType, selectedCity, properties]"]